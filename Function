using System;
using System.Collections.Generic;
using System.Text;

using System.IO;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Azure.WebJobs;
using Microsoft.Azure.WebJobs.Extensions.Http;
using Microsoft.AspNetCore.Http;
using Microsoft.Extensions.Logging;
using Newtonsoft.Json;

using Intacct.SDK;
using Intacct.SDK.Functions.Common;
using Intacct.SDK.Xml;
using Intacct.SDK.Xml.Response;
using NLog;
using ILogger = Microsoft.Extensions.Logging.ILogger;

using Intacct.Examples;

using Intacct.SDK.Exceptions;
using NLog.Extensions.Logging;
using Newtonsoft.Json.Linq;
using System.Net.Http;
using System.Net;

namespace HttpTrigger_1111_1
{
    public static class Function2
    {
        [FunctionName("Function1114")]
        public static async Task<HttpResponseMessage> Run(

        //public static async void Run(
            [HttpTrigger(AuthorizationLevel.Function, "get", "post", Route = null)] HttpRequest req, ILogger log)
        {
            log.LogInformation("C# HTTP trigger function processed a request.");
            string name = req.Query["name"];

            string requestBody = await new StreamReader(req.Body).ReadToEndAsync();
            dynamic data = JsonConvert.DeserializeObject(requestBody);
            name = name ?? data?.name;         
            
            ILogger logger = Bootstrap.Logger("Program"); 
            var result = ListVendorsModify.Run(logger);

            return new HttpResponseMessage(HttpStatusCode.OK)
            {
                Content = new StringContent(result, Encoding.UTF8, "application/json")
            };
            
        }
    }
}
